{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2025-09-24T00:58:40.394Z",
    "end": "2025-09-24T00:58:48.987Z",
    "duration": 8593,
    "testsRegistered": 6,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bfa22993-7b0a-4437-834b-3316578325bb",
      "title": "",
      "fullFile": "cypress/e2e/users.validation.spec.cy.js",
      "file": "cypress/e2e/users.validation.spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b579ca7f-be2e-4262-9757-670da1712aed",
          "title": "Usuarios - Validações/Negativos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Campos obrigatórios faltando",
              "fullTitle": "Usuarios - Validações/Negativos Campos obrigatórios faltando",
              "timedOut": null,
              "duration": 1155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "['nome', 'email', 'password', 'administrador'].forEach(field => {\n  const u = (0, _dataFactory.newUser)();\n  delete u[field];\n  cy.request({\n    method: 'POST',\n    url: usersPath,\n    headers: (0, _api.authHeaders)(),\n    body: u,\n    failOnStatusCode: false\n  }).its('status').should('be.oneOf', [400, 422]);\n});",
              "err": {},
              "uuid": "ecb2761f-6db5-4816-846a-24b6a24e7ecc",
              "parentUUID": "b579ca7f-be2e-4262-9757-670da1712aed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Emails inválidos",
              "fullTitle": "Usuarios - Validações/Negativos Emails inválidos",
              "timedOut": null,
              "duration": 831,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_users.default.invalidEmails.forEach(email => {\n  cy.request({\n    method: 'POST',\n    url: usersPath,\n    headers: (0, _api.authHeaders)(),\n    body: (0, _dataFactory.newUser)({\n      email\n    }),\n    failOnStatusCode: false\n  }).its('status').should('be.oneOf', [400, 422]);\n});",
              "err": {},
              "uuid": "f6d3e05e-0059-4cf8-8f88-7ce5e348697e",
              "parentUUID": "b579ca7f-be2e-4262-9757-670da1712aed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Email duplicado",
              "fullTitle": "Usuarios - Validações/Negativos Email duplicado",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: usersPath,\n  headers: (0, _api.authHeaders)(),\n  body: (0, _dataFactory.newUser)({\n    email: existing.email\n  }),\n  failOnStatusCode: false\n}).its('status').should('be.oneOf', [400, 409]);",
              "err": {},
              "uuid": "f4eebf0f-938c-4e95-8268-477449954cf7",
              "parentUUID": "b579ca7f-be2e-4262-9757-670da1712aed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Campo \"administrador\" deve ser string \"true\" ou \"false\"",
              "fullTitle": "Usuarios - Validações/Negativos Campo \"administrador\" deve ser string \"true\" ou \"false\"",
              "timedOut": null,
              "duration": 808,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const wrongTypes = [true, false, 1, 0, null];\nwrongTypes.forEach(val => {\n  cy.request({\n    method: 'POST',\n    url: usersPath,\n    headers: (0, _api.authHeaders)(),\n    body: (0, _dataFactory.newUser)({\n      administrador: val\n    }),\n    failOnStatusCode: false\n  }).its('status').should('be.oneOf', [400, 422]);\n});",
              "err": {},
              "uuid": "2bd63a74-e224-48b0-9e4a-6ae07a2a0d08",
              "parentUUID": "b579ca7f-be2e-4262-9757-670da1712aed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Senhas fracas (ServeRest aceita → considerar limitação)",
              "fullTitle": "Usuarios - Validações/Negativos Senhas fracas (ServeRest aceita → considerar limitação)",
              "timedOut": null,
              "duration": 865,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_users.default.weakPasswords.forEach(pwd => {\n  cy.request({\n    method: 'POST',\n    url: usersPath,\n    headers: (0, _api.authHeaders)(),\n    body: (0, _dataFactory.newUser)({\n      password: pwd\n    }),\n    failOnStatusCode: false\n  }).its('status').should('be.oneOf', [201, 400, 422]);\n});",
              "err": {},
              "uuid": "b2e4c1c3-95ed-4c33-b79b-83fbc2a9695a",
              "parentUUID": "b579ca7f-be2e-4262-9757-670da1712aed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ID inexistente em GET/PUT/DELETE",
              "fullTitle": "Usuarios - Validações/Negativos ID inexistente em GET/PUT/DELETE",
              "timedOut": null,
              "duration": 4676,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const ghost = '000000000000000000000000';\ncy.request({\n  method: 'GET',\n  url: `${usersPath}/${ghost}`,\n  headers: (0, _api.authHeaders)(),\n  failOnStatusCode: false\n}).its('status').should('be.oneOf', [400, 404]);\ncy.request({\n  method: 'PUT',\n  url: `${usersPath}/${ghost}`,\n  headers: (0, _api.authHeaders)(),\n  body: {\n    nome: 'X'\n  },\n  failOnStatusCode: false\n}).its('status').should('be.oneOf', [400, 404]);\ncy.request({\n  method: 'DELETE',\n  url: `${usersPath}/${ghost}`,\n  headers: (0, _api.authHeaders)(),\n  failOnStatusCode: false\n}).its('status').should('be.oneOf', [400, 404]);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected 200 to be one of [ 400, 404 ]",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected 200 to be one of [ 400, 404 ]\n    at Context.eval (webpack://qa-api-users/./cypress/e2e/users.validation.spec.cy.js:78:21)",
                "diff": "- 200\n+ [ 400, 404 ]\n"
              },
              "uuid": "3cfe32a8-d444-43e1-bd8a-36d50cc86cb6",
              "parentUUID": "b579ca7f-be2e-4262-9757-670da1712aed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ecb2761f-6db5-4816-846a-24b6a24e7ecc",
            "f6d3e05e-0059-4cf8-8f88-7ce5e348697e",
            "f4eebf0f-938c-4e95-8268-477449954cf7",
            "2bd63a74-e224-48b0-9e4a-6ae07a2a0d08",
            "b2e4c1c3-95ed-4c33-b79b-83fbc2a9695a"
          ],
          "failures": [
            "3cfe32a8-d444-43e1-bd8a-36d50cc86cb6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8501,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}